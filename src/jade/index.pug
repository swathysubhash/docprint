doctype html
html
	head
		meta(charset="utf-8")
		link(rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Open+Sans:400,600|Source+Code+Pro")
		style(type='text/css').
			!{css}
			!{customCSS}
	body(class=headerContent ? 'headers-available': '')
		include ./mixins
		.custom-header
			| !{headerContent}
		.documentation
			- var intro = output.content && output.content[0]
			.top-header
				.lang-header.part-header
					span.lan(lang="curl", class=lang === 'curl' ? 'selected' : '') curl
					span.lan(lang="node", class=lang === 'node' ? 'selected' : '') Node
					span.lan(lang="python", class=lang === 'python' ? 'selected' : '') Python
					span.lan(lang="java", class=lang === 'java' ? 'selected' : '') Java
					span.lan(lang="ruby", class=lang === 'ruby' ? 'selected' : '') Ruby
					span.lan(lang="php", class=lang === 'php' ? 'selected' : '') php
					span.lan(lang="go", class=lang === 'go' ? 'selected' : '') Go

			.sidebar
				nav.sidebar-nav
					if (intro && intro.description && intro.description.text)
						//.group-header
							//a(href='#top', _href='#top') Overview
						if intro.description.links && intro.description.links.length
							ul
								li.resource-header
									a.resource-nav-item(href='#' + intro.id, _href='#' + intro.id) #{capitalize(intro.title)}
								each link in intro.description.links
									li.resource-header
										a.resource-nav-item(href=link, _href=link) #{capitalize(link.substring(1))}

					each group in output.content[0].content
						if group.type === 'resourceGroup'
							.group-header
								a(href='#' + group.id, _href='#' + group.id) #{group.title}
							ul
								each resource in group.content
									li.resource-header
										a.resource-nav-item(href='#' + resource.id, _href='#' + resource.id) #{resource.title}
										ul
											each transition in resource.content
												if (transition.type === 'transition')
													li.transition
														a.child-nav-item(href='#' + transition.id, _href='#' + transition.id)
															span.child-nav-text #{transition.title}
												else if (transition.type === 'dataStructure')
													li.transition
														a.child-nav-item(href="#" + transition.id, _href="#" + transition.id)
															span.child-nav-text #{transition.title}
			.container
				.doc-body.col-12
					- var intro = output.content && output.content[0]
					.row
						.col-6.lhs
							.group-heading.top(id=intro.id) #{intro.title}
							if intro.description && intro.description.text
								.description !{intro.description.text}
					each group in output.content[0].content
						if group.type === 'resourceGroup'
							.row
								.col-6.lhs
									.group-heading.way-point(id=group.id) #{group.title}
									if group.description && group.description.text
										.description !{group.description.text}
								.col-6.rhs
							each resource in group.content
								.row
									.col-6.lhs
										.resource-heading.way-point(id=resource.id) #{resource.title}
										if resource.description && resource.description.text
											.description !{resource.description.text}
									.col-6.rhs
								each transition in resource.content
									if (transition.type === 'transition')
										.row
											.col-6.lhs
												.transition-heading.way-point(id=transition.id) #{transition.title}
												if transition.description && transition.description.text
													.description !{transition.description.text}
												if transition.xhrContent.urlParameters && transition.xhrContent.urlParameters.length
													h5.part-heading Url Parameters
													+renderUrlParameters(transition.xhrContent.urlParameters)
												if transition.xhrContent.attributes && transition.xhrContent.attributes.length
													h5.part-heading Attributes
													- var attrs = Array.isArray(transition.xhrContent.attributes) ? transition.xhrContent.attributes[0] : transition.xhrContent.attributes;
													+renderAttributes(attrs, dataStructures)
											.col-6.rhs
												.api-definition
													.api-definition-heading.rhs-heading Definition
													.api-definition-description.rhs-highlight.code
														if transition.xhrContent.method
															span.api-method(class=transition.xhrContent.method.toLowerCase()) #{transition.xhrContent.method}
														span.api-url  !{transition.xhrContent.originalUrl.replaceAll('{', '<mark>{').replaceAll('}', '}</mark>')}

												.sample-request-heading.rhs-heading Request
												if transition.xhrContent.headers && transition.xhrContent.headers.length
													.headers
														.headers-heading.rhs-heading Request Headers
														.headers-description.code.rhs-highlight
															pre.hljs
																code
																	each header in transition.xhrContent.headers
																		.header-row
																			span.key.hljs-attr #{header.name}: 
																			span.value #{header.value}
												- var transactions = transition.content && transition.content[0] && transition.content[0].content;
												each transaction, index in transactions
														if transaction.type === 'httpRequest'
															- var body = transaction.content && transaction.content[0];
															if body && body.type === 'body'
																.sample-request-body.rhs-heading Request Body
																if(body.content.isJSON())
																	.sample-request-body-description.rhs-highlight.code !{JSON.stringify(JSON.parse(body.content), 0, 2)}
																else
																	.sample-request-body-description.rhs-highlight.code !{body.content}
												.sample-request
													.sample-request-heading.rhs-heading Example Request
													if lang && transition.snippets && transition.snippets[lang]
														.sample-request-description.rhs-highlight.code 
															| !{transition.snippets[lang].replaceAll('\\\n', '\\\<br>')}
													else
														.sample-request-description.rhs-highlight.code !{transition.snippet.replaceAll('\\\n', '\\\<br>')}
												.sample-response
													- var transactions = transition.content && transition.content[0] && transition.content[0].content;
													each transaction, index in transactions
														if transaction.type === 'httpResponse'
															.sample-response-heading.rhs-heading 
																span Response 
																if transaction.props && transaction.props.statusCode
																	span.status-code #{transaction.props && transaction.props.statusCode}
															if transaction.props && transaction.props.headers && transaction.props.headers.length
																.headers
																	.headers-heading.rhs-heading Response Headers
																	.headers-description.code.rhs-highlight
																		pre.hljs
																			code
																				each header in transaction.props.headers
																					if header.key && header.key.content && header.value && header.value.content
																						.header-row
																							span.key.hljs-attr #{header.key.content}: 
																							span.value #{header.value.content}
															each body in transaction.content
																if body && body.type === 'body'
																	.sample-response-body.rhs-heading Response Body
																	if(body.content.isJSON())
																		.sample-response-body-description.rhs-highlight.code !{JSON.stringify(JSON.parse(body.content), 0, 2)}
																	else
																		.sample-response-body-description.rhs-highlight.code !{body.content}
									else if (transition.type === 'dataStructure')
										.row
											.col-6.lhs
												.transition-heading.way-point(id=transition.id) #{transition.title}
												h5.part-heading Attributes
												+renderAttributes(transition.content[0], dataStructures)
			script(src='https://cdnjs.cloudflare.com/ajax/libs/waypoints/4.0.1/noframework.waypoints.min.js')
			script.
				function triggerEvent(el, eventName) {
					if (!el) return;
					var evt;
					try {
					    evt = new window.Event(eventName, {bubbles: true});
					}
					catch (e) {
					    evt = document.createEvent('Event');
					    evt.initEvent(eventName, true, false);
					}
					finally {
					    el.dispatchEvent(evt);
					}
				};
				var docbody = document.querySelector('.doc-body');
				docbody.addEventListener('click', function(e) {
					if (e.target.classList.contains('expand') || e.target.classList.contains('close')) {
						var childAttr = e.target.parentNode.parentNode;
						childAttr.classList.toggle('show');
					}
				});
				var sidebar = document.querySelector('.sidebar');
				sidebar.addEventListener('click', function(e) {
					if (e.target.classList.contains('resource-nav-item')) {
						var selected = sidebar.querySelector('.resource-header.expand');
						var resourceHeader = e.target.parentNode;
						if (selected !== e.target.parentNode) {
							selected && selected.classList.remove('expand');
							resourceHeader.classList.add('expand');
						}
					} else if (e.target.classList.contains('child-nav-text')) {
						var selected = sidebar.querySelector('.child-nav-item.selected');
						if (selected !== e.target.parentNode) {
							selected && selected.classList.remove('selected');
							e.target.parentNode.classList.add('selected');
						}
					} else if (e.target && e.target.parentNode && e.target.parentNode.classList.contains('group-header')) {
						var selected = sidebar.querySelector('.resource-header.expand');
						selected && selected.classList.remove('expand');
						selected = sidebar.querySelector('.child-nav-item.selected');
						selected && selected.classList.remove('selected');
					}
				});
				var langBar = document.querySelector('.top-header .lang-header');
				langBar.addEventListener('click', function(e) {
					if (e.target.classList.contains('lan')) {
						var selectedLang = langBar.querySelector('.selected');
						selectedLang = selectedLang && selectedLang.getAttribute('lang')
						var targetLang = e.target.getAttribute('lang');
						if (window.location.pathname.indexOf('/' + selectedLang) !== -1) {
							window.location.pathname = window.location.pathname.replace('/' + selectedLang, '/' + targetLang);
						} else if (window.location.search.indexOf(selectedLang) !== -1) {
							window.location.search = window.location.search.replace(selectedLang, targetLang);
						} else {
						}
					}
				})
				var waypoints = document.querySelectorAll('.way-point');
				function selectSection(navEl) {
					var selected;
					if (navEl) {
						if (navEl.classList.contains('child-nav-item')) {
							var resourceNav = navEl.parentNode.parentNode.parentNode;
							selected = sidebar.querySelector('.child-nav-item.selected');
							selected && (selected !== navEl) && selected.classList.remove('selected');
							selected = sidebar.querySelector('.resource-header.expand');
							selected && (selected !== resourceNav) && selected.classList.remove('expand');
							resourceNav.classList.add('expand');
							navEl.classList.add('selected');
						} else if (navEl.classList.contains('resource-nav-item')) {
							selected = sidebar.querySelector('.child-nav-item.selected');
							selected && (selected !== navEl) && selected.classList.remove('selected');
							selected = sidebar.querySelector('.resource-header.expand');
							selected && (selected !== resourceNav) && selected.classList.remove('expand');
							navEl.parentNode && navEl.parentNode.classList.add('expand');
						} else {
							selected = sidebar.querySelector('.child-nav-item.selected');
							selected && (selected !== navEl) && selected.classList.remove('selected');
							selected = sidebar.querySelector('.resource-header.expand');
							selected && (selected !== resourceNav) && selected.classList.remove('expand');
						}
					}
				}
				var wayHandler = debounce(function() {

					if (this.element.classList.contains('header-anchor')) {
						this.element = this.element.parentNode;
					}

					var tid = this.element.id;
					var id = '#' + this.element.id;

					var navEl = document.querySelector('.sidebar a[_href=\"' + id + '\"]');
					selectSection(navEl)
				}, 0, true)
				var hAnchors = document.querySelectorAll('.header-anchor');
				var topElement = document.querySelector('.top')
				for(var i = 0;i < waypoints.length; i++) {
					new Waypoint({
						continuous: false,
						context: document.querySelector('.container'),
						element: waypoints[i],
						handler: wayHandler
					});
				}
				for(var i = 0;i < hAnchors.length; i++) {
					new Waypoint({
						continuous: false,
						context: document.querySelector('.container'),
						element: hAnchors[i],
						handler: wayHandler,
						offset: 20
					});
				}
				new Waypoint({
					continuous: false,
					context: document.querySelector('.container'),
					element: topElement,
					handler: wayHandler,
					offset: -10
				});
				function debounce(func, wait, immediate) {
					var timeout;
					return function() {
						var context = this, args = arguments;
						var later = function() {
							timeout = null;
							if (!immediate) func.apply(context, args);
						};
						var callNow = immediate && !timeout;
						clearTimeout(timeout);
						timeout = setTimeout(later, wait);
						if (callNow) func.apply(context, args);
					};
				};
				var h = window.location.hash
				if (h) {
					var navEl = document.querySelector('.sidebar a[_href=\"' + h + '\"]');
					var selected;
					selectSection(navEl)
				} else {
					var navEl = document.querySelector('.sidebar a');
					selectSection(navEl)
				}
